[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[user]
	name = Felipe Miotto
	email = 160151821@aluno.unb.br
[init]
	defaultBranch = main
[core]
    excludesfile = /Users/felipemiotto/.gitignore_global
[alias]
    rao = remote add origin # Seguido do link do repositório no GitHub
    brmain = branch -M main # Mudando a branch, caso esteja Master, para Main
    pom = push -u origin main # Adicionar o repositório para a nuvem
    ac = !git add -A && git commit -m
    save = !git add -A && git commit -m 'chore: save point'
    unstage = reset HEAD --
    ps = push
    ci = "!f() { git commit -m \"$*\"; }; f"
    co = checkout # Escreve depois o nome da branch, navega para ela
    cm = checkout main # Volta para a master branch
    cb = checkout -b # Escreve o nome da branch, cria ela e faz um checkout para a nova branch
    mg = merge # Adicionar as novas funcionalidades ao projeto em produção -- git mg <nome da branch>
    del = branch -D # Deletar a branch da nova funcionalidade, depois de aplicar no projeto -- git del <nome da branch>
    br = branch # Mostrar as branches do projeto
    s = show
    st = status -sb
    sf = show --name-only
    lg = log --pretty=format:'%Cred%h%Creset %C(bold)%cr%Creset %Cgreen<%an>%Creset %s' --max-count=30
    prettygraph = log --graph --all --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset' --max-count=30
    incoming = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)-%ar%Creset' ..@{u})
    outgoing = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}..)
    undo = checkout -- # Completa com o nome do arquivo, ele volta a como estava antes dos commits
    uncommit = reset --soft HEAD~1 # Desfazer o último commit mas manter os arquivos
	gl = config --global -l
	d = diff
    lol = !git --no-pager log --oneline
    lola = !git --no-pager log --oneline --decorate
    ignore = !( [ ! -z `grep "^$GIT_PREFIX$1$" ".gitignore"` ] ) || echo "$GIT_PREFIX$1" >> .gitignore && echo > /dev/null
